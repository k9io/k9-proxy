################################################################
# The Key9 proxy is designed to proxy and cache requests to the
# Key9 SSH API. This proxy can operate as a local caching server
# or as a network-based caching server. The Key9 proxy can be
# valuable because even if Key9 is inaccessible, you can still
# log in using your cached SSH keys.
################################################################

################################################################
# This section defines how the Key9 proxy will interact with 
# the Key9 API.
################################################################

core:

   address: "https://ssh-api.k9.io"   # Key9 API
   runas: "key9"                      # Who to "runas"
   connection_timeout: 5              # TCP connection timeout

################################################################
# This section defined how the "proxy" operates.
################################################################

proxy:

   # If you plan on running the proxy on a port below 1024, 
   # you'll either need to run as "root" or "setcap" the
   # binary!

   http_listen: ":8080"   # Port to answer proxy requests on.

   # Enable/disable TLS.  If "http_tls" is set to "false",  then
   # http_cert and http_key are ignored. If "http_tls" is true, 
   # then the cert/key must be readable by the "runas" user! If 
   # you are using the Key9 proxy as a local cache, then TLS 
   # isn't necessary. 

   http_tls: false
   http_cert: "/etc/letsencrypt/live/YOURSITE/fullchain.pem"
   http_key: "/etc/letsencrypt/live/YOURSITE/privkey.pem"

   # "http_mode" can be set to "release" (production), "debug"
   # and "test".

   http_mode: "release"

   # "cache_dir" is the directory location of where to store 
   # API cached requests.

   cache_dir: "/opt/k9/proxy_cache"

